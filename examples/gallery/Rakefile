begin
  gem "bundler", "~> 1.0"
  require "bundler/setup"
rescue LoadError => ex
  puts ex.message
  abort "Bundler failed to load, (did you run 'gem install bundler' ?)"
end

WAWJS_ROOT = File.expand_path('../../../', __FILE__)
$LOAD_PATH.unshift File.join(WAWJS_ROOT, 'lib')
require 'fileutils'

# Absolutizes a path from here (i.e. __DIR__)
def _(relative) 
  File.expand_path("../#{relative}", __FILE__)
end

# Runs a command, returns result on STDOUT. If the exit status was no 0,
# a RuntimeError is raised. 
def shell_safe_exec(cmd)
  unless system(cmd)
    raise RuntimeError, "Error while executing #{cmd}" 
  end
end

begin
  require 'rake/testtask'
  desc "Run unit tests"
  Rake::TestTask.new(:unit_test) do |t|
    t.libs = ["src"]
    t.verbose = false
    t.pattern = "test/*_test.rb"
  end
rescue LoadError => ex
  task :unit_test do
    puts ex.message
    puts ex.backtrace.join("\n")
    abort 'rake/testtask does not seem available. '
  end
ensure
  desc "Run all tests"
  task :test => [:unit_test]
end
  
desc "Generates the application in src/public/js"
task :"js:build" do
  wawjs  = File.join(WAWJS_ROOT, 'bin', 'wawjs')
  target = File.expand_path("../src/public/js/gallery.dev.js", __FILE__)
  FileUtils.mkdir_p File.dirname(target)
  src    = File.expand_path("../src", __FILE__)
  cmd = "#{wawjs} compile --name='$.wApp' --join --no-uglify #{src} > #{target}"
  shell_safe_exec(cmd)
end

desc "Runs the application"
task :run do
  Kernel.exec "./config.ru"
end

task :default => :"test"